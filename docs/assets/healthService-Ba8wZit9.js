var s=Object.defineProperty;var r=(a,e,t)=>e in a?s(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var n=(a,e,t)=>r(a,typeof e!="symbol"?e+"":e,t);import{b as i}from"./index-C_Eym2jv.js";class o{constructor(){n(this,"startTime",Date.now());n(this,"version","2.0.0")}async getHealthStatus(){const e={status:"healthy",timestamp:new Date().toISOString(),services:{api:{status:"unhealthy"},frontend:{status:"healthy",version:this.version,environment:"production"}},uptime:Date.now()-this.startTime,version:this.version,environment:{mode:"production"}};try{const t=await i.get("/health");e.services.api={status:"healthy"}}catch{e.services.api={status:"unhealthy"},e.status="degraded"}return e.services.api.status==="unhealthy"&&(e.status="unhealthy"),e}async getDetailedHealth(){return{...await this.getHealthStatus(),system:{userAgent:navigator.userAgent,language:navigator.language,platform:navigator.platform,cookieEnabled:navigator.cookieEnabled,onLine:navigator.onLine,memory:performance.memory?{used:performance.memory.usedJSHeapSize,total:performance.memory.totalJSHeapSize,limit:performance.memory.jsHeapSizeLimit}:null},environment:{mode:"production"}}}async ping(){return{status:"ok",timestamp:new Date().toISOString()}}}const m=new o;export{m as h};
